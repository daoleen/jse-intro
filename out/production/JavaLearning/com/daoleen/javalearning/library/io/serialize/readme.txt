Сериализация может быть применена только к объекту, реализующему интерфейс Serializable.
Интерфейс Serializable не содержит никаких членов, - просто используется для того, чтобы указать, что
класс может быть сериализован. Если класс является сериализуемым, все его подклассы также сериализуемы.
Переменные, объявленные как transient, не подлежат сериализации. Не сохраняются также и статические переменные.

Интерфейс Externalizable.
Средства Java для сериализации и десериализации спроектированы так, что бОльшая часть работы по сохранению и
восстановлению состояния объекта выполняется автоматически. Однако бывают случаи, когда программисту нужно
управлять этим процессом. Например, может оказаться желательным использовать технологии сжатия и шифрования.
Интерфейс Externalizable предназначен как раз для таких случаев. Он определяет следующие 2 метода:
- void readExternal(ObjectInput inputStream) throws IOException, ClassNotFoundException
- void writeExternal(ObjectOutput outputStream) throws IOException
В этих методах inputStream - это байтовый поток, из которого объект может быть прочитан, а outputStream - байтовый
поток, куда он записывается.


Интерфейс ObjectOutput.
Расширяет интерфейсы AutoCloseable и DataOutput, поддерживает сериализацию объектов. Наиболее значимый метод,
определяемый данным интерфейсом, writeObject() - вызывается для сериализации объекта. В случае ошибок все методы
этого интерфейса передают исключение IOException.
Методы:
void close()        - закрывает вызывающий поток. Последующие попытки записи передадут IOException
void flush()        - финализирует выходное состояние, чтобы очистить все буферы. Т.е. все выходные буферы сбрасываются
void write(byte buffer[]) - записывает массив байтов в вызывающий поток
void write(byte buffer[], int offset, int bytesCount) - записывает диапазон bytesCount байт из массива buffer начиная с buffer[offset]
void write(int b)   - записывает одиночный байт в вызывающий поток. Из аргумента b записывается только младший байт
void writeObject(Object obj) - записывает объект obj в вызывающий поток.

Класс ObjectOutputStream.
Класс ObjectOutputStream расширяет класс OutputStream и реализует интерфейс ObjectOutput. Этот класс отвечает за
запись объекта в поток. Конструктор его выглядит так:
    ObjectOutputStream(OutputStream outputStream) throws IOException
Аргумент outputStream представляет собой выходной поток, в который могут быть записаны сериализуемые объекты. Закрытие
объекта класса ObjectOutputStream приводит к закрытию также внутреннего потока, определенного аргументом outputStream.


Интерфейс ObjectInput.
Расширяет интерфейсы AutoCloseable и DataInput, поддерживает десериализацию объектов. Наиболее значимый метод,
определяемый данным интерфейсом, readObject() - вызывается для десериализации объекта. В случае ошибок все методы
этого интерфейса передают исключение IOException. Методы readObject() также может передать исключение ClassNotFoundException.
Методы:
int available()     - возвращает количество байтов, которые доступны во входном буфере в настоящий момент
void close()        - закрывает вызывающий поток. Последующие попытки чтения вызовут IOException. Внутренние потоки также закрываются
int read()          - возвращает целочисленное представление следующего доступного байта ввода. При достижении конца файла
                      возвращается -1
int read(byte buffer[]) - пытается прочитать до buffer.length байт в buffer, начиная с buffer[offset], возвращая
                          количество байтов, которые удалось прочитать. При достижении конца файла возвращается -1
int read(byte buffer[], int offset, int bytesCount) - пытается прочитать до bytesCount байт в buffer, начиная с buffer[offset],
                        возвращая количество байтов, которые удалось прочитать. При достижении конца файла возвращается -1
Object readObject() - читает объект из вызывающего потока
Long skip(long numBytes) - игнорирует (пропускает) numBytes байт вызывающего потока, возвращая количество действительно пропущенных байтов

Класс ObjectInputStream
Класс ObjectInputStream расширяет InputStream и реализует интерфейс ObjectInput. Класс ObjectInputStream отвечает
за чтение объектов из потока. Конструктор его выглядит так:
    ObjectInputStream(InputStream inputStream) throws IOException
Аргумент inputStream - это входной поток, из которого должен быть прочитан сериализованный объект. Закрытие объекта
класса ObjectInputStream приводит к закрытию также внутреннего потока, определенного аргументом inputStream.
Также в классе ObjectInputStream присутствует вложенный класс по имени GetField, который обслуживает чтение
постоянных полей.
