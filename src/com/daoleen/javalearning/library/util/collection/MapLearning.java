package com.daoleen.javalearning.library.util.collection;

/**
 * Created with IntelliJ IDEA.
 * User: daoleen
 * Date: 9/26/13
 * Time: 5:19 PM
 * To change this template use File | Settings | File Templates.
 */

/**
 * Map(карта) - объект, сохраняющий ассоциации между ключами и значениями,
 * т.е. пары "ключ-значение".
 * Карты не реализуют интерфейс Iterable, поэтому нельзя перебирать карту,
 * используя форму цикла "for-each". Однако можно привести карту к коллекции,
 * и далее воспользоваться перебором.
 * Интерфейсы, которые поддерживают карты:
 * - Map        - отображает уникальные ключи на значения
 * - Map.Entry  - описывает элемент карты(пару "ключ-значение"). Вложенный класс интерфейса Map
 * - NavigableMap   - расширяет интерфейс SortedMap для обработки извлечения элементов на основе
 *                    поиска по ближайшему соответствию
 * - SortedMap  - расширяет Map таким образом, что ключи располагаются в порядке по возрастанию
 *
 * Интерфейс Map определен следующим образом: interface Map<K,V>
 *                                                          - K - тип ключей
 *                                                          - V - тип значений
 *
 * Ниже приведены классы, реализующие эти интерфейсы:
 * - AbstractMap    - реализует большую часть интерфейса Map
 * - EnumMap        - расширяет AbstractMap для использования с ключами типа enum
 * - HashMap        - расширяет AbstractMap для использования хеш-таблицы
 * - TreeMap        - расширяет AbstractMap для использования дерева
 * - WeakHashMap    - расширяет AbstractMap для использования хеш-таблицы со слабыми ключами
 * - LinkedHashMap  - расширяет HashMap, разрешая перебор в порядке вставки
 * - IdentityHashMap - расширяет AbstractMap и использует проверку ссылочной эквивалентности при сравнении документов
 *
 * Основные методы при работе с картами - это get(..) и put(..) - служат для чтения и записи значений по ключу
 */
public class MapLearning {
}
